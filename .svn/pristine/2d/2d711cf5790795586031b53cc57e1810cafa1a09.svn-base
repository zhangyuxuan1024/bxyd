package net.iclassmate.xydspace.ui.activity.study;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Rect;
import android.media.MediaPlayer;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.Result;

import net.iclassmate.xydspace.R;
import net.iclassmate.xydspace.constant.Constant;
import net.iclassmate.xydspace.utils.NetWorkUtils;
import net.iclassmate.xydspace.utils.VibratorUtil;
import net.iclassmate.xydspace.view.ScanView.ZXingScannerViewNew;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MediaType;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

/**
 * Created by xydbj on 2016.8.12.
 */
public class ScanActivity extends Activity implements ZXingScannerViewNew.ResultHandler, ZXingScannerViewNew.QrSize, View.OnClickListener {
    ZXingScannerViewNew scanView;
    private TextView result;
    private ImageView img_close;
    private String userId, userType, wkName, wkUrl;
    private int schoolId;
    private boolean isLoaded;
    private String reStr;
    public static final int REQUES_PLAY = 3;
    private String result2;
    private Context mContext;
    private boolean isFail;
    private Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case 200:
                    String str = (String) msg.obj;
                    String url = null;
                    try {
                        JSONObject jsonObject = new JSONObject(str);
                        url = jsonObject.getString("url");
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    Log.i("info", "用bxyd从服务器请求的url:" + url);
                    Intent intent = new Intent(ScanActivity.this, WebViewActivity.class);
                    intent.putExtra("url", url);
                    startActivity(intent);
                    break;
            }
        }
    };
    private SharedPreferences sharedPreferences;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        scanView = new ZXingScannerViewNew(this);
        scanView.setContentView(R.layout.activity_scan);
        scanView.setQrSize(this);
        setContentView(scanView);
        mContext = this;
        initUI();
        getUserId();
        setupFormats();
    }

    private void initUI() {
        result = (TextView) findViewById(R.id.editText);
        img_close = (ImageView) findViewById(R.id.img_close);
        sharedPreferences = ScanActivity.this.getSharedPreferences(Constant.SHARED_PREFERENCES, Context.MODE_PRIVATE);

        img_close.setOnClickListener(this);
        isLoaded = false;
        isFail = false;
    }

    public void setupFormats() {
        List<BarcodeFormat> formats = new ArrayList<BarcodeFormat>();
        formats.add(BarcodeFormat.QR_CODE);
        if (scanView != null) {
            scanView.setFormats(formats);
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        try {
            scanView.setResultHandler(this);
            scanView.startCamera(-1);
            scanView.setFlash(false);
            scanView.setAutoFocus(true);
            if (!scanView.cameraAvailable()) {
                scanView.stopCamera();
                isFail = true;
            }
        } catch (Exception e) {
            isFail = true;
        } finally {
            if (isFail) {
                Toast.makeText(mContext, "无法启动相机，请在程序设置为心意答开放相机权限", Toast.LENGTH_LONG).show();
                this.finish();
            }
        }
    }

    @Override
    public void handleResult(final Result rawResult) {
        result2 = rawResult.toString();
        Log.i("info", "扫码得到的result：" + result2);
        soundRing(this);
        if (!NetWorkUtils.isNetworkAvailable(this)) {
            Toast.makeText(this, "请检查您的网络连接！", Toast.LENGTH_SHORT).show();
            return;
        }
        if (!isWifiActive(this)) {
            Intent intent = new Intent(ScanActivity.this, IsWifiActivity.class);
            intent.putExtra("type", 1);
            startActivityForResult(intent, REQUES_PLAY);
            return;
        }
        result.setText(rawResult.toString());
        toActivty();
    }

    public void getUserId() {
        userId = sharedPreferences.getString(Constant.ID_USER, "");
        if (userId == null) {
            return;
        }
    }

    private void toActivty() {
        if (result2.startsWith("bxyd")){
            MediaType type = MediaType.parse("application/json;charset=utf-8");
            OkHttpClient okHttpClient = new OkHttpClient();
            JSONObject jsonObject = null;
            try {
                jsonObject = new JSONObject();
                jsonObject.put("code", result2);
                jsonObject.put("platform", "Android");
                jsonObject.put("userId", userId);
            } catch (JSONException e) {
                e.printStackTrace();
            }
            String json = jsonObject.toString();
            Log.i("info", "扫码如果含有bxyd的话，向服务器发送的json：" + json);
            RequestBody body = RequestBody.create(type, json);
            Request request = new Request.Builder()
                    .post(body)
                    .url(Constant.SYS_URL)
                    .build();
            okHttpClient.newCall(request).enqueue(new Callback() {
                @Override
                public void onFailure(Call call, IOException e) {
                    Log.i("info", "请求失败,网络，服务器：" + e.getMessage());
                }

                @Override
                public void onResponse(Call call, Response response) throws IOException {
                    Message msg = new Message();
                    msg.obj = response.body().string();
                    msg.what = response.code();
                    mHandler.sendMessage(msg);
                }
            });
        }else {
            Intent intent = new Intent(ScanActivity.this, WebViewActivity.class);
            intent.putExtra("url", result2);
            startActivity(intent);
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == REQUES_PLAY) {
            if (resultCode == RESULT_OK) {
                toActivty();
            }
        }
    }

    private void soundRing(Context context) {
        try {
            MediaPlayer mPlayer = MediaPlayer.create(this, R.raw.scan_sucess);
            mPlayer.start();
            VibratorUtil.Vibrate(ScanActivity.this, 500);   //震动300ms
        } catch (Exception e) {

        }
    }

    @Override
    public Rect getDetectRect() {
        View view = findViewById(R.id.scan_window);
        int top = ((View) view.getParent()).getTop() + view.getTop();
        int left = view.getLeft();
        int width = view.getWidth();
        int height = view.getHeight();
        Rect rect = null;
        if (width != 0 && height != 0) {
            rect = new Rect(left, top, left + width, top + height);
            addLineAnim(rect);
        }
        return rect;
    }

    private void addLineAnim(Rect rect) {
        ImageView imageView = (ImageView) findViewById(R.id.scanner_line);
        imageView.setVisibility(View.VISIBLE);
        if (imageView.getAnimation() == null) {
            TranslateAnimation anim = new TranslateAnimation(0, 0, 0, rect.height());
            anim.setDuration(1500);
            anim.setRepeatCount(Animation.INFINITE);
            imageView.startAnimation(anim);
        }
    }

    public static boolean isWifiActive(Context icontext) {
        Context context = icontext.getApplicationContext();
        ConnectivityManager connectivity = (ConnectivityManager) context
                .getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo[] info;
        if (connectivity != null) {
            info = connectivity.getAllNetworkInfo();
            if (info != null) {
                for (int i = 0; i < info.length; i++) {
                    if (info[i].getTypeName().equals("WIFI") && info[i].isConnected()) {
                        return true;
                    }
                }
            }
        }
        return false;
    }

    @Override
    protected void onPause() {
        super.onPause();
        scanView.stopCamera();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        scanView.stopCamera();
        scanView = null;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.img_close:
                this.finish();
                break;
        }
    }
}
